name: Docker Image CI - Build Release

on:
    pull_request:
        types: [ synchronize, ready_for_review ]
        branches: 
            - master
    workflow_dispatch:
        inputs:
          addon:
            description: 'Addon to build'     
            required: true
            default: 'sambanas'

permissions:
  pull-requests: write

jobs:
    build:
        if: github.event.pull_request.draft == false
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4
          with:
                submodules: true

        - name: Login to DockerHub
          uses: docker/login-action@v3
          with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Extract branch name
          shell: bash
          run: |
              env
              #echo ${{ github.head_ref || github.ref_name }}
              if [ -z "${{ github.event.inputs.addon }}" ]; then
                if [ -z "${{ github.head_ref || github.ref_name }}" ]; then
                    export _GITHUB_REF=${GITHUB_REF}
                    echo "BR_VERSION from env ref ${_GITHUB_REF}"
                else
                    export _GITHUB_REF=${{ github.head_ref || github.ref_name }}
                    echo "BR_VERSION from github ref ${_GITHUB_REF}"
                fi
                echo "BR_VERSION=${_GITHUB_REF##*/}" | tee -a "$GITHUB_OUTPUT"
                echo "BR_PROJECT=$(TMP=${_GITHUB_REF##*/};echo ${TMP%%_*})" >> "$GITHUB_OUTPUT"
              else
                echo "BR_VERSION from event"  
                echo "BR_VERSION=${{ github.event.inputs.addon }}"  | tee -a "$GITHUB_OUTPUT"
                echo "BR_PROJECT=${{ github.event.inputs.addon }}"  | tee -a "$GITHUB_OUTPUT"
              fi
          id: extract_branch


          
                
        - name: Publish ${{ steps.extract_branch.outputs.BR_VERSION }} Addon
          uses: home-assistant/builder@master
          env:
                CAS_API_KEY: ${{ secrets.CAS_API_KEY }}
          with:
                args: |
                    --all \
                    --target ${{ steps.extract_branch.outputs.BR_PROJECT }} \
                    --docker-hub dianlight \
                    --cosign
