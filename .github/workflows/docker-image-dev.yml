name: Docker Image CI - Build Dev

on:
  push:
    branches:
      - devrelease/*
  workflow_dispatch:

permissions:
  pull-requests: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract branch name
        shell: bash
        run: echo "BR_VERSION=${GITHUB_REF##*/}" >> "$GITHUB_OUTPUT"
        id: extract_branch


      - name: ‚úçüèº version ${{ steps.extract_branch.outputs.BR_VERSION }}
        id: version_set
        uses: endaft/action-yamler@v1.1.1
        with:
          file: ./${{ steps.extract_branch.outputs.BR_VERSION }}/config.yaml
          path: version
          set: .dev${{ github.run_number }}
          get: true
          append: true

      - name: üëì read-yaml-file ${{ steps.extract_branch.outputs.BR_VERSION }}/config.yaml
        uses: pietrobolcato/action-read-yaml@1.1.0
        id: read_action_js
        with:
          config: ${{ github.workspace }}/${{ steps.extract_branch.outputs.BR_VERSION }}/config.yaml    

      - name: Publish ${{ steps.extract_branch.outputs.BR_VERSION }} Addon ${{ steps.version_set.outputs.value_old }}
        uses: home-assistant/builder@2025.03.0
        if: ${{ steps.read_action_js.outputs.image != '' }}
        env:
          CAS_API_KEY: ${{ secrets.CAS_API_KEY }}
        with:
          args: |
            --aarch64 \
            --target ${{ steps.extract_branch.outputs.BR_VERSION }} \
            --docker-hub dianlight

      - name: pull-request
        if: ${{ steps.read_action_js.outputs.image != '' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        continue-on-error: true
        shell: bash
        run: |
          set -x
          git config --global user.email "workflow-bot@github.com"
          git config --global user.name "Prerelease Bot"
          #git branch -f "prerelease/${{ steps.extract_branch.outputs.BR_VERSION }}_${{ steps.version_set.outputs.value_old }}" HEAD && \
          #  git push -u origin  "prerelease/${{ steps.extract_branch.outputs.BR_VERSION }}_${{ steps.version_set.outputs.value_old }}" || :
          #git restore .
          #git clean -f
          #git log --left-right --graph --cherry-pick --oneline master...${GITHUB_REF} | \
          #  gh pr create --base "prerelease/${{ steps.extract_branch.outputs.BR_VERSION }}_${{ steps.version_set.outputs.value_old }}" --title "Releasing ${{ github.ref }} into prerelease" --body ":crown: *An automated PR*" --body-file -
          #git fetch origin master    
          #gh pr create --base "prerelease2/${{ steps.extract_branch.outputs.BR_VERSION }}_${{ steps.version_set.outputs.value_old }}" \ 
          #  --title "Releasing ${{ github.ref }} into prerelease" \ 
          #  --fill \
          #  --head "${{ github.ref }}"
          #  --template "pull_request_template.md"
          #  --draft
          #  
          git fetch origin master ${BRANCH_NAME}   
          git branch -f "prerelease/${{ steps.extract_branch.outputs.BR_VERSION }}_${{ steps.version_set.outputs.value_old }}" "origin/master"
          git push -f origin  "prerelease/${{ steps.extract_branch.outputs.BR_VERSION }}_${{ steps.version_set.outputs.value_old }}"
          gh pr create \
            --base "prerelease/${{ steps.extract_branch.outputs.BR_VERSION }}_${{ steps.version_set.outputs.value_old }}" \
            --head "${BRANCH_NAME}" \
            --title "Releasing ${BRANCH_NAME} into prerelease ${{ steps.extract_branch.outputs.BR_VERSION }}_${{ steps.version_set.outputs.value_old }}" \
            --fill || :
