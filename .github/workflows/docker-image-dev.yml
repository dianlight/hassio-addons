name: Docker Image CI - Build Dev

on:
  push:
    branches:
      - devrelease/*
  workflow_dispatch:

permissions:
  pull-requests: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0


      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üìΩÔ∏è Extract dev branch project name
        shell: bash
        run: echo "name=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/devrelease/}}" >> $GITHUB_OUTPUT
        id: extract_project

      - name: ‚úçüèº version ${{ steps.extract_project.outputs.name }}
        id: version_get
        uses: endaft/action-yamler@v1.1.1
        with:
          file: ./${{ steps.extract_project.outputs.name }}/config.yaml
          path: version
          get: true

      - name: üìΩÔ∏è Identify SemVer ${{ steps.version_get.outputs.value_old }} suffix
        shell: bash
        run: echo "suffix=${{ contains(steps.version_get.outputs.value_old,'-') && '.' || '-' }}" >> $GITHUB_OUTPUT
        id: semver-suffix

      - name: ‚úçüèº version ${{ steps.extract_project.outputs.name }}
        id: version_set
        uses: endaft/action-yamler@v1.1.1
        with:
          file: ./${{ steps.extract_project.outputs.name }}/config.yaml
          path: version
          set: ${{ steps.semver-suffix.outputs.suffix }}dev${{ github.run_number }}
          get: true
          append: true

      - name: üì∞ Publish ${{ steps.extract_project.outputs.name }} Addon ${{ steps.version_set.outputs.value_new }}
        uses: home-assistant/builder@master
        env:
          CAS_API_KEY: ${{ secrets.CAS_API_KEY }}
        with:
          args: |
            --aarch64 \
            --target ${{ steps.extract_project.outputs.name }} \
            --docker-hub dianlight \
            --cosign

      - name: Get Master SHA
        shell: bash
        id: git_sha_master
        run: |
          echo "sha=$(git rev-parse origin/master)" >> $GITHUB_OUTPUT   

      - name: Create prerelease/${{ steps.extract_project.outputs.name }}_${{ steps.version_set.outputs.value_old }} if not exists
        continue-on-error: true
        uses: peterjgrainger/action-create-branch@v3.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'refs/heads/prerelease/${{ steps.extract_project.outputs.name }}_${{ steps.version_set.outputs.value_old }}'
          sha: '${{ steps.git_sha_master.outputs.sha }}'

      - name: üßëüèΩ‚Äçüíª pull-request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
        shell: bash
        run: |
          git config --global user.email "workflow-bot@github.com"
          git config --global user.name "Prerelease Bot"
          git restore .
          git clean -f
          gh pr create --base "prerelease/${{ steps.extract_project.outputs.name }}_${{ steps.version_set.outputs.value_old }}" --title "Releasing ${{ github.ref }} into prerelease" --body ":crown: *An automated PR*"
