name: Docker Image CI - Build Pre-Release

on:
  push:
    branches:
      - prerelease/*
  workflow_dispatch:

permissions:
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üìΩÔ∏è Extract dev branch project name
        shell: bash
        run: |
           FULL_NAME=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/devrelease/}}"
           echo "full_name=${FULL_NAME} >> $GITHUB_OUTPUT
           echo "name=${FULL_NAME%%_*}" >> $GITHUB_OUTPUT
        id: extract_project

      - name: ‚úçüèº version ${{ steps.extract_project.outputs.name }}
        id: version_get
        uses: endaft/action-yamler@v1.1.1
        with:
          file: ./${{ steps.extract_project.outputs.name }}/config.yaml
          path: version
          get: true

      - name: üìΩÔ∏è Identify SemVer ${{ steps.version_get.outputs.value_old }} suffix
        shell: bash
        run: echo "suffix=${{ contains(steps.version_get.outputs.value_old,'-') && '.' || '-' }}" >> $GITHUB_OUTPUT
        id: semver-suffix

      - name: ‚úçüèº version ${{ steps.extract_project.outputs.name }}
        id: version_set
        uses: endaft/action-yamler@v1.1.1
        with:
          file: ./${{ steps.extract_project.outputs.name }}/config.yaml
          path: version
          set: ${{ steps.semver-suffix.outputs.suffix }}beta${{ github.run_number }}
          get: true
          append: true

      - name: ‚úçüèº BetaName ${{ steps.extract_project.outputs.name }}
        id: betaname_set
        uses: endaft/action-yamler@v1.1.1
        with:
          file: ./${{ steps.extract_project.outputs.name }}/config.yaml
          path: name
          set: -Œ≤
          get: true
          append: true
            
      - name: Publish ${{ steps.extract_project.outputs.name }} Addon ${{ steps.version_set.outputs.value_new }}
        uses: home-assistant/builder@master
        env:
          CAS_API_KEY: ${{ secrets.CAS_API_KEY }}
        with:
          args: |
            --all \
            --target ${{ steps.extract_project.outputs.name }} \
            --docker-hub dianlight

      - name: Update version in ${{ steps.extract_project.outputs.name }}/CHANGELOG.md
        continue-on-error: true
        shell: bash
        run: sed -i '1,/## ${{ steps.version_set.outputs.value_old }}/{s//## ${{ steps.version_set.outputs.value_new }}/}' ${{ steps.extract_project.outputs.name }}/CHANGELOG.md 

      - name: Create pull request for Beta Repository
        uses: thzois/autobot@v1.0.3
        continue-on-error: true
        env:
          GH_ACCESS_TOKEN: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          git_config_user_email: 'ffp-bot@github.com'
          git_config_user_name: 'ffp-bot'
          target_repo: 'dianlight/hassio-addons-beta'
          source_dir: '${{ steps.extract_project.outputs.name }}'
#          source_dir_copy_glob: '!(*.yaml)'
          target_dir: ''
          pr_target_repo_base_branch: 'master'
#          pr_target_repo_compare_branch: 'autobot/${{ steps.version_set.outputs.value_new }}'
#          pr_title: '[autobot] ${{ steps.version_set.outputs.value_new }} Automated changes'
#          pr_description_text: '[autobot] ${{ steps.version_set.outputs.value_new }} Automated changes'
#          pr_label: 'autobot'

      - name: Restoring original repository
        shell: bash
        run: |
          git config --global user.email "workflow-bot@github.com"
          git config --global user.name "Prerelease Bot"
          git restore .
          git clean -f
          
      - name: pull-request ${{ steps.version_set.outputs.value_old }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
        shell: bash
        run: |
          gh pr create --title "Releasing ${{ github.ref }}" --body ":crown: *An automated PR*"
#          gh pr create --base "release/${{ steps.extract_branch.outputs.BR_VERSION }}" --title "Releasing ${{ github.ref }} into release" --body ":crown: *An automated PR*"  

